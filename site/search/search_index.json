{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Zero-to-Pro Developer Roadmap","text":"<p>Welcome! Start with the 00 \u2014 Git Path, then pick a track. This site is auto-generated from the repository catalog.</p> <p>Start here</p> <p>1) Do the 00 \u2014 Git Path 2) Pick a track from Tracks \u2192 Overview 3) Open a Progress Tracker issue (template provided)</p> <p>\u2013 \ud83d\udc49 Tracks Overview \u2013 \ud83e\uddf0 Start Git: 00 \u2014 Git Path (repo) \u2013 \u2705 Create progress issue:   https://github.com/AyhamJo7/Zero-2-Pro/issues/new?template=progress.md&amp;title=Progress%3A+YOUR_NAME</p> <p>Start a cohort</p> <p>Want accountability? Start a study cohort:</p> <p>\u2013 Open a Cohort issue via the template \u2013 Share a weekly cadence and your track(s) \u2013 Invite peers to join</p> <p>\u2192 https://github.com/AyhamJo7/Zero-2-Pro/issues/new?template=cohort.md&amp;labels=cohort,docs</p> <ul> <li>\ud83d\udcda Tracks: See the Tracks Overview</li> <li>\ud83e\udded Repository: GitHub Repo</li> <li>\ud83e\udde9 Contributing: See <code>CONTRIBUTING.md</code> in the repo</li> </ul>"},{"location":"changelog/","title":"Changelog","text":"<p>High-level, human-friendly changes. For details, see Git history.</p>"},{"location":"changelog/#unreleased","title":"Unreleased","text":"<ul> <li>\u2026</li> </ul>"},{"location":"changelog/#2025-09-29","title":"2025-09-29","text":"<ul> <li>Initial docs site with auto-generated track pages</li> <li>TOC generator and catalog validator</li> </ul>"},{"location":"01-web-development/web-04-advanced/","title":"Advanced: Web Performance &amp; Observability","text":"","tags":["performance","observability","bundling","metrics"]},{"location":"01-web-development/web-04-advanced/#learning-outcomes","title":"Learning Outcomes","text":"<p>By the end of this module, you will:</p> <ul> <li>[ ] Master Core Web Vitals (LCP, FID, CLS) measurement and optimization</li> <li>[ ] Implement advanced bundling and code splitting strategies</li> <li>[ ] Set up comprehensive performance monitoring</li> <li>[ ] Apply scalable performance optimization techniques</li> </ul>","tags":["performance","observability","bundling","metrics"]},{"location":"01-web-development/web-04-advanced/#prerequisites","title":"Prerequisites","text":"<ul> <li>Completion of web-03-project-spa-api</li> <li>Strong understanding of modern JavaScript and web APIs</li> <li>Experience with build tools and CI/CD</li> </ul>","tags":["performance","observability","bundling","metrics"]},{"location":"01-web-development/web-04-advanced/#module-structure","title":"Module Structure","text":"","tags":["performance","observability","bundling","metrics"]},{"location":"01-web-development/web-04-advanced/#part-1-core-web-vitals-deep-dive","title":"Part 1: Core Web Vitals Deep Dive","text":"<p>TODO: Create detailed content on measuring and optimizing LCP, FID, and CLS</p>","tags":["performance","observability","bundling","metrics"]},{"location":"01-web-development/web-04-advanced/#part-2-advanced-bundling-code-splitting","title":"Part 2: Advanced Bundling &amp; Code Splitting","text":"<p>TODO: Add comprehensive guide to Webpack/Vite optimization, tree shaking, and dynamic imports</p>","tags":["performance","observability","bundling","metrics"]},{"location":"01-web-development/web-04-advanced/#part-3-performance-budgets-monitoring","title":"Part 3: Performance Budgets &amp; Monitoring","text":"<p>TODO: Implement Lighthouse CI, bundle analyzers, and performance tracking</p>","tags":["performance","observability","bundling","metrics"]},{"location":"01-web-development/web-04-advanced/#part-4-observability-at-scale","title":"Part 4: Observability at Scale","text":"<p>TODO: Set up RUM, error tracking, and performance dashboards</p>","tags":["performance","observability","bundling","metrics"]},{"location":"01-web-development/web-04-advanced/#final-project","title":"Final Project","text":"<p>Build a production-ready web application that: - Achieves excellent Core Web Vitals scores - Implements intelligent code splitting - Includes comprehensive performance monitoring - Demonstrates measurable optimization improvements</p>","tags":["performance","observability","bundling","metrics"]},{"location":"01-web-development/web-04-advanced/#assessment-criteria","title":"Assessment Criteria","text":"<ul> <li>Performance metrics meet industry standards</li> <li>Monitoring setup provides actionable insights</li> <li>Code demonstrates advanced optimization techniques</li> <li>Documentation includes performance analysis</li> </ul>","tags":["performance","observability","bundling","metrics"]},{"location":"01-web-development/web-04-advanced/#resources-references","title":"Resources &amp; References","text":"<p>TODO: Add links to performance tools, case studies, and best practices</p> <p>This is an advanced module requiring significant hands-on practice with real-world performance challenges.</p>","tags":["performance","observability","bundling","metrics"]},{"location":"01-web-development/challenges/","title":"Web Development Level-3 Challenges","text":"<p>These stretch challenges extend the web-03-project-spa-api milestone with additional complexity and real-world scenarios.</p>"},{"location":"01-web-development/challenges/#challenge-1-progressive-web-app-pwa","title":"Challenge 1: Progressive Web App (PWA)","text":"<p>Transform your SPA into a full PWA with:</p> <ul> <li>Service worker for offline functionality</li> <li>App manifest for installability</li> <li>Push notifications integration</li> <li>Background sync capabilities</li> </ul> <p>Skills developed: Service workers, PWA APIs, offline-first design</p>"},{"location":"01-web-development/challenges/#challenge-2-advanced-authentication","title":"Challenge 2: Advanced Authentication","text":"<p>Extend authentication with:</p> <ul> <li>OAuth2 integration (Google, GitHub)</li> <li>Multi-factor authentication (TOTP)</li> <li>Role-based access control (RBAC)</li> <li>Session management and refresh tokens</li> </ul> <p>Skills developed: OAuth flows, security patterns, token management</p>"},{"location":"01-web-development/challenges/#challenge-3-real-time-features","title":"Challenge 3: Real-time Features","text":"<p>Add real-time capabilities:</p> <ul> <li>WebSocket integration for live updates</li> <li>Real-time collaboration features</li> <li>Server-sent events for notifications</li> <li>Optimistic UI updates</li> </ul> <p>Skills developed: WebSockets, real-time patterns, state synchronization</p>"},{"location":"01-web-development/challenges/#challenge-4-performance-monitoring","title":"Challenge 4: Performance &amp; Monitoring","text":"<p>Implement production-ready optimizations:</p> <ul> <li>Code splitting and lazy loading</li> <li>Performance budgets and monitoring</li> <li>Error tracking and logging</li> <li>Analytics and user behavior tracking</li> </ul> <p>Skills developed: Performance optimization, observability, analytics</p>"},{"location":"01-web-development/challenges/#challenge-5-deployment-devops","title":"Challenge 5: Deployment &amp; DevOps","text":"<p>Set up production deployment pipeline:</p> <ul> <li>Docker containerization</li> <li>CI/CD pipeline with automated tests</li> <li>Environment management (dev/staging/prod)</li> <li>Database migrations and backups</li> </ul> <p>Skills developed: Docker, CI/CD, deployment strategies, infrastructure</p>"},{"location":"01-web-development/challenges/#getting-started","title":"Getting Started","text":"<ol> <li>Choose 2-3 challenges that interest you most</li> <li>Fork or extend your existing web-03 project</li> <li>Document your implementation approach</li> <li>Submit your enhanced project for peer review</li> </ol>"},{"location":"01-web-development/challenges/#resources","title":"Resources","text":"<ul> <li>PWA Documentation</li> <li>OAuth2 Specification</li> <li>WebSocket API</li> <li>Web Performance Best Practices</li> </ul>"},{"location":"01-web-development/challenges/#level-4-challenge-variants-advanced-web-performance","title":"Level-4 Challenge Variants \u2014 Advanced Web Performance","text":"<p>These challenge variants extend the web-04-advanced-performance module with additional stretch goals that deepen your production skills.</p>"},{"location":"01-web-development/challenges/#variant-a-performance-budgets-everywhere","title":"Variant A \u2014 Performance Budgets Everywhere","text":"<p>Goal: Apply budgets to scripts, images, and API latency. Fail CI if any budget is exceeded.</p> <p>Deliverables: - Budget config file (e.g., <code>budgets.json</code> or similar) - CI run link or logs showing pass/fail - Before/after report (e.g., Lighthouse or bundle analyzer)</p> <p>Acceptance Criteria: - At least 3 budgets defined (e.g., JS, CSS, image size) - CI job fails when any budget exceeded - Evidence of threshold enforcement</p>"},{"location":"01-web-development/challenges/#variant-b-progressive-enhancement-stress-test","title":"Variant B \u2014 Progressive Enhancement Stress-Test","text":"<p>Goal: Ensure core flows work with JS disabled; record Lighthouse scores.</p> <p>Deliverables: - Screenshots of app with JS disabled - Notes documenting which flows work/fail - Any fixes applied to make it \"PE-ready\" - Lighthouse report (before/after if fixes applied)</p> <p>Acceptance Criteria: - At least one critical flow tested without JS - Documented findings + next steps - Lighthouse score documented</p>"},{"location":"01-web-development/challenges/#variant-c-your-own-stretch","title":"Variant C \u2014 (Your own stretch)","text":"<p>Goal: Propose and execute a measurable stretch aligned with the module outcomes.</p> <p>Examples: - HTTP/2 push or early hints - Service worker for offline capability - Real User Monitoring (RUM) with field data analysis - A/B test infrastructure</p> <p>Deliverables: - Short proposal (1\u20132 paragraphs) - Implementation evidence (code, config, screenshots) - Metrics or results (e.g., before/after latency, hit rate)</p> <p>Acceptance Criteria: - Measurable outcome - Documented steps and results - Ties back to L3/L4 learning outcomes</p>"},{"location":"02-python/py-04-advanced/","title":"Advanced: Async IO, Concurrency, and Profiling","text":"","tags":["asyncio","concurrency","profiling","performance"]},{"location":"02-python/py-04-advanced/#learning-outcomes","title":"Learning Outcomes","text":"<p>By the end of this module, you will:</p> <ul> <li>[ ] Master asyncio event loops, coroutines, and concurrent patterns</li> <li>[ ] Implement high-throughput async applications</li> <li>[ ] Profile Python applications and identify bottlenecks</li> <li>[ ] Apply advanced optimization techniques</li> </ul>","tags":["asyncio","concurrency","profiling","performance"]},{"location":"02-python/py-04-advanced/#prerequisites","title":"Prerequisites","text":"<ul> <li>Completion of py-03-project-cli</li> <li>Solid understanding of Python fundamentals</li> <li>Experience with testing and packaging</li> </ul>","tags":["asyncio","concurrency","profiling","performance"]},{"location":"02-python/py-04-advanced/#module-structure","title":"Module Structure","text":"","tags":["asyncio","concurrency","profiling","performance"]},{"location":"02-python/py-04-advanced/#part-1-asyncio-foundations","title":"Part 1: Asyncio Foundations","text":"<p>TODO: Deep dive into event loops, coroutines, tasks, and futures</p>","tags":["asyncio","concurrency","profiling","performance"]},{"location":"02-python/py-04-advanced/#part-2-concurrent-patterns","title":"Part 2: Concurrent Patterns","text":"<p>TODO: Producer-consumer, worker pools, semaphores, and backpressure handling</p>","tags":["asyncio","concurrency","profiling","performance"]},{"location":"02-python/py-04-advanced/#part-3-performance-profiling","title":"Part 3: Performance Profiling","text":"<p>TODO: cProfile, line_profiler, memory_profiler, and optimization strategies</p>","tags":["asyncio","concurrency","profiling","performance"]},{"location":"02-python/py-04-advanced/#part-4-advanced-optimization","title":"Part 4: Advanced Optimization","text":"<p>TODO: Cython, numba, and when to drop to C extensions</p>","tags":["asyncio","concurrency","profiling","performance"]},{"location":"02-python/py-04-advanced/#final-project","title":"Final Project","text":"<p>Build a high-performance async web scraper or data processor that: - Handles thousands of concurrent requests - Implements proper backpressure and rate limiting - Includes comprehensive profiling and optimization - Demonstrates measurable performance improvements</p>","tags":["asyncio","concurrency","profiling","performance"]},{"location":"02-python/py-04-advanced/#assessment-criteria","title":"Assessment Criteria","text":"<ul> <li>Proper async/await usage and error handling</li> <li>Efficient resource utilization under load</li> <li>Evidence-based performance optimization</li> <li>Clean, maintainable concurrent code</li> </ul>","tags":["asyncio","concurrency","profiling","performance"]},{"location":"02-python/py-04-advanced/#resources-references","title":"Resources &amp; References","text":"<p>TODO: Add links to asyncio guides, profiling tools, and performance case studies</p> <p>This module focuses on building high-performance Python applications that scale effectively.</p>","tags":["asyncio","concurrency","profiling","performance"]},{"location":"02-python/challenges/","title":"Python Level-3 Challenges","text":"<p>These stretch challenges extend the py-03-project-cli milestone with advanced Python concepts and real-world applications.</p>"},{"location":"02-python/challenges/#challenge-1-async-cli-tool","title":"Challenge 1: Async CLI Tool","text":"<p>Convert your CLI to async patterns:</p> <ul> <li>Async HTTP requests and file I/O</li> <li>Concurrent task execution</li> <li>Progress bars for long-running operations</li> <li>Graceful cancellation handling</li> </ul> <p>Skills developed: asyncio, concurrent programming, user experience</p>"},{"location":"02-python/challenges/#challenge-2-plugin-architecture","title":"Challenge 2: Plugin Architecture","text":"<p>Add extensible plugin system:</p> <ul> <li>Dynamic plugin loading and discovery</li> <li>Plugin API design and documentation</li> <li>Configuration management for plugins</li> <li>Plugin lifecycle management</li> </ul> <p>Skills developed: Dynamic imports, API design, extensibility patterns</p>"},{"location":"02-python/challenges/#challenge-3-advanced-data-processing","title":"Challenge 3: Advanced Data Processing","text":"<p>Implement high-performance data handling:</p> <ul> <li>Stream processing for large datasets</li> <li>Memory-efficient algorithms</li> <li>Integration with pandas/numpy</li> <li>Data validation and transformation pipelines</li> </ul> <p>Skills developed: Stream processing, data science libraries, algorithms</p>"},{"location":"02-python/challenges/#challenge-4-distributed-processing","title":"Challenge 4: Distributed Processing","text":"<p>Add distributed computing capabilities:</p> <ul> <li>Message queue integration (Redis/RabbitMQ)</li> <li>Worker processes with task distribution</li> <li>Result aggregation and monitoring</li> <li>Fault tolerance and retry mechanisms</li> </ul> <p>Skills developed: Message queues, distributed systems, fault tolerance</p>"},{"location":"02-python/challenges/#challenge-5-production-deployment","title":"Challenge 5: Production Deployment","text":"<p>Package for production distribution:</p> <ul> <li>Docker containerization with multi-stage builds</li> <li>PyPI package publication</li> <li>CI/CD with automated testing</li> <li>Cross-platform compatibility testing</li> </ul> <p>Skills developed: Packaging, distribution, CI/CD, containerization</p>"},{"location":"02-python/challenges/#getting-started","title":"Getting Started","text":"<ol> <li>Select 2-3 challenges aligned with your interests</li> <li>Extend your existing py-03 CLI project</li> <li>Document design decisions and trade-offs</li> <li>Create comprehensive tests for new features</li> </ol>"},{"location":"02-python/challenges/#resources","title":"Resources","text":"<ul> <li>asyncio Documentation</li> <li>Python Packaging Guide</li> <li>Celery for Distributed Tasks</li> <li>Docker Best Practices</li> </ul>"},{"location":"02-python/challenges/#level-4-challenge-variants-advanced-async-performance","title":"Level-4 Challenge Variants \u2014 Advanced Async &amp; Performance","text":"<p>These challenge variants extend the py-04-advanced-async-performance module with additional stretch goals that deepen your concurrency and profiling skills.</p>"},{"location":"02-python/challenges/#variant-a-multi-strategy-concurrency-comparison","title":"Variant A \u2014 Multi-Strategy Concurrency Comparison","text":"<p>Goal: Compare throughput &amp; latency across sync, asyncio, threading, and multiprocessing for a realistic workload.</p> <p>Deliverables: - Benchmark script that runs all four strategies - Results table (throughput, p50/p95 latency, CPU/memory) - Commentary on when each strategy shines</p> <p>Acceptance Criteria: - At least 4 strategies benchmarked - Statistical significance (multiple runs) - Clear recommendation for the workload tested</p>"},{"location":"02-python/challenges/#variant-b-production-grade-async-pipeline","title":"Variant B \u2014 Production-Grade Async Pipeline","text":"<p>Goal: Implement structured concurrency with backpressure, retries, and observability.</p> <p>Deliverables: - Pipeline with bounded concurrency (semaphore or task groups) - Retry logic with exponential backoff - Logging/metrics (e.g., success rate, latency histogram) - CI integration (tests pass, perf guard in place)</p> <p>Acceptance Criteria: - Pipeline handles failures gracefully (retry + circuit breaker optional) - Observability demonstrates backpressure in action - Tests cover cancellation and timeout paths</p>"},{"location":"02-python/challenges/#variant-c-your-own-stretch","title":"Variant C \u2014 (Your own stretch)","text":"<p>Goal: Propose and execute a measurable stretch aligned with the module outcomes.</p> <p>Examples: - <code>uvloop</code> integration + benchmark vs standard asyncio - Profiling with py-spy or scalene; flamegraph analysis - Async database connection pooling with load testing - Custom async context managers for resource cleanup</p> <p>Deliverables: - Short proposal (1\u20132 paragraphs) - Implementation evidence (code, config, profiling output) - Metrics or results (e.g., throughput improvement, memory reduction)</p> <p>Acceptance Criteria: - Measurable outcome - Documented steps and results - Ties back to L3/L4 learning outcomes</p>"},{"location":"03-java/java-04-advanced/","title":"Advanced: Resilient Services &amp; Observability","text":"","tags":["resilience","observability","microservices","distributed-systems"]},{"location":"03-java/java-04-advanced/#learning-outcomes","title":"Learning Outcomes","text":"<p>By the end of this module, you will:</p> <ul> <li>[ ] Implement circuit breakers, retries, and timeout patterns</li> <li>[ ] Set up metrics, tracing, and logging for production services</li> <li>[ ] Handle distributed system failures gracefully</li> <li>[ ] Apply chaos engineering principles</li> </ul>","tags":["resilience","observability","microservices","distributed-systems"]},{"location":"03-java/java-04-advanced/#prerequisites","title":"Prerequisites","text":"<ul> <li>Completion of java-03-project-service</li> <li>Understanding of REST APIs and Spring Boot</li> <li>Basic knowledge of distributed systems</li> </ul>","tags":["resilience","observability","microservices","distributed-systems"]},{"location":"03-java/java-04-advanced/#module-structure","title":"Module Structure","text":"","tags":["resilience","observability","microservices","distributed-systems"]},{"location":"03-java/java-04-advanced/#part-1-resilience-patterns","title":"Part 1: Resilience Patterns","text":"<p>TODO: Circuit breakers, bulkheads, timeouts, and retry strategies</p>","tags":["resilience","observability","microservices","distributed-systems"]},{"location":"03-java/java-04-advanced/#part-2-observability-stack","title":"Part 2: Observability Stack","text":"<p>TODO: Metrics with Micrometer, tracing with Zipkin, structured logging</p>","tags":["resilience","observability","microservices","distributed-systems"]},{"location":"03-java/java-04-advanced/#part-3-production-readiness","title":"Part 3: Production Readiness","text":"<p>TODO: Health checks, graceful shutdown, configuration management</p>","tags":["resilience","observability","microservices","distributed-systems"]},{"location":"03-java/java-04-advanced/#part-4-chaos-engineering","title":"Part 4: Chaos Engineering","text":"<p>TODO: Fault injection, load testing, and failure scenario testing</p>","tags":["resilience","observability","microservices","distributed-systems"]},{"location":"03-java/java-04-advanced/#final-project","title":"Final Project","text":"<p>Build a resilient microservice that: - Implements multiple resilience patterns - Provides comprehensive observability - Handles various failure scenarios gracefully - Includes chaos engineering tests</p>","tags":["resilience","observability","microservices","distributed-systems"]},{"location":"03-java/java-04-advanced/#assessment-criteria","title":"Assessment Criteria","text":"<ul> <li>Proper implementation of resilience patterns</li> <li>Comprehensive monitoring and alerting</li> <li>Evidence of failure scenario testing</li> <li>Production-ready configuration and deployment</li> </ul>","tags":["resilience","observability","microservices","distributed-systems"]},{"location":"03-java/java-04-advanced/#resources-references","title":"Resources &amp; References","text":"<p>TODO: Add links to Spring Cloud, resilience libraries, and observability tools</p> <p>This module prepares you to build and operate resilient services in production environments.</p>","tags":["resilience","observability","microservices","distributed-systems"]},{"location":"03-java/challenges/","title":"Java Level-3 Challenges","text":"<p>These stretch challenges extend the java-03-project-service milestone with enterprise Java patterns and technologies.</p>"},{"location":"03-java/challenges/#challenge-1-microservices-architecture","title":"Challenge 1: Microservices Architecture","text":"<p>Decompose your service into microservices:</p> <ul> <li>Service discovery and registration</li> <li>Inter-service communication patterns</li> <li>Distributed configuration management</li> <li>Circuit breaker implementation</li> </ul> <p>Skills developed: Microservices patterns, Spring Cloud, resilience</p>"},{"location":"03-java/challenges/#challenge-2-event-driven-architecture","title":"Challenge 2: Event-Driven Architecture","text":"<p>Implement event-driven patterns:</p> <ul> <li>Message brokers (Apache Kafka, RabbitMQ)</li> <li>Event sourcing and CQRS patterns</li> <li>Saga pattern for distributed transactions</li> <li>Event streaming and processing</li> </ul> <p>Skills developed: Event sourcing, message brokers, distributed transactions</p>"},{"location":"03-java/challenges/#challenge-3-advanced-data-persistence","title":"Challenge 3: Advanced Data Persistence","text":"<p>Enhance data layer capabilities:</p> <ul> <li>Multi-database support (SQL + NoSQL)</li> <li>Connection pooling and optimization</li> <li>Database migration strategies</li> <li>Caching layers (Redis, Caffeine)</li> </ul> <p>Skills developed: Database design, caching strategies, data access patterns</p>"},{"location":"03-java/challenges/#challenge-4-security-compliance","title":"Challenge 4: Security &amp; Compliance","text":"<p>Implement enterprise security:</p> <ul> <li>OAuth2 and JWT token management</li> <li>Role-based access control (RBAC)</li> <li>Input validation and sanitization</li> <li>Audit logging and compliance</li> </ul> <p>Skills developed: Security frameworks, compliance, authentication</p>"},{"location":"03-java/challenges/#challenge-5-performance-monitoring","title":"Challenge 5: Performance &amp; Monitoring","text":"<p>Add production-ready observability:</p> <ul> <li>Application performance monitoring (APM)</li> <li>Custom metrics and dashboards</li> <li>JVM tuning and garbage collection</li> <li>Load testing and profiling</li> </ul> <p>Skills developed: Performance tuning, JVM internals, monitoring tools</p>"},{"location":"03-java/challenges/#getting-started","title":"Getting Started","text":"<ol> <li>Choose 2-3 challenges that match your career goals</li> <li>Build upon your existing java-03 service</li> <li>Document architecture decisions</li> <li>Implement comprehensive testing strategy</li> </ol>"},{"location":"03-java/challenges/#resources","title":"Resources","text":"<ul> <li>Spring Cloud Documentation</li> <li>Apache Kafka Guide</li> <li>Java Security Architecture</li> <li>JVM Performance Tuning</li> </ul>"},{"location":"04-go/go-04-advanced/","title":"Advanced: Concurrency Patterns, Context, and Backpressure","text":"","tags":["concurrency","context","backpressure","performance"]},{"location":"04-go/go-04-advanced/#learning-outcomes","title":"Learning Outcomes","text":"<p>By the end of this module, you will:</p> <ul> <li>[ ] Apply advanced concurrency patterns (worker pools, fan-in/out, pipelines)</li> <li>[ ] Master context.Context for cancellation and timeouts</li> <li>[ ] Implement backpressure and flow control mechanisms</li> <li>[ ] Build scalable concurrent systems</li> </ul>","tags":["concurrency","context","backpressure","performance"]},{"location":"04-go/go-04-advanced/#prerequisites","title":"Prerequisites","text":"<ul> <li>Completion of go-03-project-service</li> <li>Strong understanding of goroutines and channels</li> <li>Experience with HTTP services in Go</li> </ul>","tags":["concurrency","context","backpressure","performance"]},{"location":"04-go/go-04-advanced/#module-structure","title":"Module Structure","text":"","tags":["concurrency","context","backpressure","performance"]},{"location":"04-go/go-04-advanced/#part-1-advanced-concurrency-patterns","title":"Part 1: Advanced Concurrency Patterns","text":"<p>TODO: Worker pools, pipelines, fan-in/fan-out, and select patterns</p>","tags":["concurrency","context","backpressure","performance"]},{"location":"04-go/go-04-advanced/#part-2-context-mastery","title":"Part 2: Context Mastery","text":"<p>TODO: Context propagation, cancellation, deadlines, and values</p>","tags":["concurrency","context","backpressure","performance"]},{"location":"04-go/go-04-advanced/#part-3-backpressure-flow-control","title":"Part 3: Backpressure &amp; Flow Control","text":"<p>TODO: Rate limiting, buffering strategies, and graceful degradation</p>","tags":["concurrency","context","backpressure","performance"]},{"location":"04-go/go-04-advanced/#part-4-performance-profiling","title":"Part 4: Performance &amp; Profiling","text":"<p>TODO: pprof, benchmarking, and optimization techniques</p>","tags":["concurrency","context","backpressure","performance"]},{"location":"04-go/go-04-advanced/#final-project","title":"Final Project","text":"<p>Build a high-throughput data processing service that: - Processes thousands of concurrent requests - Implements proper context handling and cancellation - Includes backpressure and flow control - Demonstrates measurable performance characteristics</p>","tags":["concurrency","context","backpressure","performance"]},{"location":"04-go/go-04-advanced/#assessment-criteria","title":"Assessment Criteria","text":"<ul> <li>Effective use of advanced concurrency patterns</li> <li>Proper context usage throughout the application</li> <li>Robust backpressure handling under load</li> <li>Evidence-based performance optimization</li> </ul>","tags":["concurrency","context","backpressure","performance"]},{"location":"04-go/go-04-advanced/#resources-references","title":"Resources &amp; References","text":"<p>TODO: Add links to Go concurrency guides, pprof documentation, and performance case studies</p> <p>This module focuses on building highly concurrent Go applications that perform well under load.</p>","tags":["concurrency","context","backpressure","performance"]},{"location":"04-go/challenges/","title":"Go Level-3 Challenges","text":"<p>These stretch challenges extend the go-03-project-service milestone with advanced Go patterns and distributed systems concepts.</p>"},{"location":"04-go/challenges/#challenge-1-grpc-service-architecture","title":"Challenge 1: gRPC Service Architecture","text":"<p>Transform your HTTP service to gRPC:</p> <ul> <li>Protocol buffer definitions and code generation</li> <li>Streaming RPC implementations</li> <li>Service discovery and load balancing</li> <li>Inter-service communication patterns</li> </ul> <p>Skills developed: gRPC, protocol buffers, streaming, service mesh</p>"},{"location":"04-go/challenges/#challenge-2-high-performance-concurrency","title":"Challenge 2: High-Performance Concurrency","text":"<p>Optimize for extreme concurrency:</p> <ul> <li>Worker pools with backpressure handling</li> <li>Lock-free data structures where appropriate</li> <li>Context-based cancellation patterns</li> <li>Memory pool optimizations</li> </ul> <p>Skills developed: Advanced concurrency, performance optimization, profiling</p>"},{"location":"04-go/challenges/#challenge-3-cloud-native-deployment","title":"Challenge 3: Cloud-Native Deployment","text":"<p>Build for cloud-native environments:</p> <ul> <li>Kubernetes deployment manifests</li> <li>Health checks and readiness probes</li> <li>Configuration management with ConfigMaps</li> <li>Service mesh integration (Istio)</li> </ul> <p>Skills developed: Kubernetes, cloud-native patterns, service mesh</p>"},{"location":"04-go/challenges/#challenge-4-observability-monitoring","title":"Challenge 4: Observability &amp; Monitoring","text":"<p>Implement comprehensive observability:</p> <ul> <li>Structured logging with structured data</li> <li>Distributed tracing with OpenTelemetry</li> <li>Custom metrics and alerting</li> <li>Performance profiling integration</li> </ul> <p>Skills developed: Observability tools, tracing, metrics, profiling</p>"},{"location":"04-go/challenges/#challenge-5-data-pipeline-processing","title":"Challenge 5: Data Pipeline Processing","text":"<p>Build high-throughput data processing:</p> <ul> <li>Stream processing with Apache Kafka</li> <li>ETL pipelines with proper error handling</li> <li>Batch processing with concurrency</li> <li>Data validation and transformation</li> </ul> <p>Skills developed: Stream processing, data pipelines, message brokers</p>"},{"location":"04-go/challenges/#getting-started","title":"Getting Started","text":"<ol> <li>Select challenges that align with your interests</li> <li>Extend your go-03 service with chosen enhancements</li> <li>Focus on Go idioms and best practices</li> <li>Benchmark and profile your implementations</li> </ol>"},{"location":"04-go/challenges/#resources","title":"Resources","text":"<ul> <li>gRPC-Go Documentation</li> <li>Kubernetes Go Client</li> <li>OpenTelemetry Go</li> <li>Go Performance Optimization</li> </ul>"},{"location":"05-ai-ml/ai-04-advanced/","title":"Advanced: RAG Evaluation, Guardrails, and Observability","text":"","tags":["rag","evaluation","guardrails","observability","safety"]},{"location":"05-ai-ml/ai-04-advanced/#learning-outcomes","title":"Learning Outcomes","text":"<p>By the end of this module, you will:</p> <ul> <li>[ ] Design and implement RAG evaluation pipelines</li> <li>[ ] Build safety guardrails and content filtering systems</li> <li>[ ] Set up comprehensive ML observability</li> <li>[ ] Handle production ML system challenges</li> </ul>","tags":["rag","evaluation","guardrails","observability","safety"]},{"location":"05-ai-ml/ai-04-advanced/#prerequisites","title":"Prerequisites","text":"<ul> <li>Completion of ai-03-project-mlapp</li> <li>Understanding of LLMs and RAG patterns</li> <li>Experience with ML evaluation metrics</li> </ul>","tags":["rag","evaluation","guardrails","observability","safety"]},{"location":"05-ai-ml/ai-04-advanced/#module-structure","title":"Module Structure","text":"","tags":["rag","evaluation","guardrails","observability","safety"]},{"location":"05-ai-ml/ai-04-advanced/#part-1-rag-evaluation-frameworks","title":"Part 1: RAG Evaluation Frameworks","text":"<p>TODO: Retrieval metrics, generation quality, end-to-end evaluation</p>","tags":["rag","evaluation","guardrails","observability","safety"]},{"location":"05-ai-ml/ai-04-advanced/#part-2-safety-guardrails","title":"Part 2: Safety &amp; Guardrails","text":"<p>TODO: Content filtering, bias detection, prompt injection prevention</p>","tags":["rag","evaluation","guardrails","observability","safety"]},{"location":"05-ai-ml/ai-04-advanced/#part-3-ml-observability","title":"Part 3: ML Observability","text":"<p>TODO: Model monitoring, drift detection, performance tracking</p>","tags":["rag","evaluation","guardrails","observability","safety"]},{"location":"05-ai-ml/ai-04-advanced/#part-4-production-challenges","title":"Part 4: Production Challenges","text":"<p>TODO: Scaling, cost optimization, and model lifecycle management</p>","tags":["rag","evaluation","guardrails","observability","safety"]},{"location":"05-ai-ml/ai-04-advanced/#final-project","title":"Final Project","text":"<p>Build a production-ready RAG system that: - Includes comprehensive evaluation metrics - Implements safety guardrails and content filtering - Provides full observability and monitoring - Demonstrates handling of production challenges</p>","tags":["rag","evaluation","guardrails","observability","safety"]},{"location":"05-ai-ml/ai-04-advanced/#assessment-criteria","title":"Assessment Criteria","text":"<ul> <li>Robust evaluation framework with relevant metrics</li> <li>Effective safety measures and guardrails</li> <li>Comprehensive monitoring and alerting</li> <li>Evidence of production readiness</li> </ul>","tags":["rag","evaluation","guardrails","observability","safety"]},{"location":"05-ai-ml/ai-04-advanced/#resources-references","title":"Resources &amp; References","text":"<p>TODO: Add links to evaluation frameworks, safety tools, and observability platforms</p> <p>This module prepares you to deploy and maintain AI/ML systems in production environments.</p>","tags":["rag","evaluation","guardrails","observability","safety"]},{"location":"05-ai-ml/challenges/","title":"AI/ML Level-3 Challenges","text":"<p>These stretch challenges extend the ai-03-project-mlapp milestone with advanced AI/ML techniques and production considerations.</p>"},{"location":"05-ai-ml/challenges/#challenge-1-advanced-rag-pipeline","title":"Challenge 1: Advanced RAG Pipeline","text":"<p>Enhance your RAG system with:</p> <ul> <li>Multi-modal retrieval (text, images, code)</li> <li>Hybrid search (dense + sparse retrieval)</li> <li>Re-ranking and query expansion</li> <li>Conversational memory and context management</li> </ul> <p>Skills developed: Advanced retrieval, multi-modal AI, conversation design</p>"},{"location":"05-ai-ml/challenges/#challenge-2-model-fine-tuning-optimization","title":"Challenge 2: Model Fine-tuning &amp; Optimization","text":"<p>Implement custom model improvements:</p> <ul> <li>Fine-tuning on domain-specific data</li> <li>Model quantization and compression</li> <li>ONNX export and optimization</li> <li>A/B testing for model variants</li> </ul> <p>Skills developed: Model customization, optimization techniques, experimentation</p>"},{"location":"05-ai-ml/challenges/#challenge-3-mlops-pipeline","title":"Challenge 3: MLOps Pipeline","text":"<p>Build production ML infrastructure:</p> <ul> <li>Model versioning and registry</li> <li>Automated training and evaluation pipelines</li> <li>Model deployment with blue/green strategies</li> <li>Drift detection and retraining triggers</li> </ul> <p>Skills developed: MLOps, model lifecycle, automation, monitoring</p>"},{"location":"05-ai-ml/challenges/#challenge-4-ai-safety-ethics","title":"Challenge 4: AI Safety &amp; Ethics","text":"<p>Implement responsible AI practices:</p> <ul> <li>Bias detection and mitigation strategies</li> <li>Content filtering and safety guardrails</li> <li>Explainability and interpretability tools</li> <li>Privacy-preserving techniques</li> </ul> <p>Skills developed: AI ethics, safety engineering, interpretability</p>"},{"location":"05-ai-ml/challenges/#challenge-5-scalable-ai-infrastructure","title":"Challenge 5: Scalable AI Infrastructure","text":"<p>Deploy at production scale:</p> <ul> <li>GPU optimization and batching strategies</li> <li>Model serving with auto-scaling</li> <li>Cost optimization and resource management</li> <li>Multi-model serving architecture</li> </ul> <p>Skills developed: Infrastructure scaling, cost optimization, resource management</p>"},{"location":"05-ai-ml/challenges/#getting-started","title":"Getting Started","text":"<ol> <li>Choose challenges that match your AI/ML interests</li> <li>Build upon your ai-03 project foundation</li> <li>Focus on measurable improvements and metrics</li> <li>Document evaluation methodologies and results</li> </ol>"},{"location":"05-ai-ml/challenges/#resources","title":"Resources","text":"<ul> <li>Hugging Face Transformers</li> <li>MLflow Documentation</li> <li>ONNX Runtime</li> <li>Responsible AI Practices</li> </ul>"},{"location":"06-cyber-security/sec-04-advanced/","title":"Advanced: Hardening Playbook &amp; Threat Modeling","text":"","tags":["hardening","threat-modeling","defense-in-depth","incident-response"]},{"location":"06-cyber-security/sec-04-advanced/#learning-outcomes","title":"Learning Outcomes","text":"<p>By the end of this module, you will:</p> <ul> <li>[ ] Develop systematic security hardening procedures</li> <li>[ ] Conduct comprehensive threat modeling exercises</li> <li>[ ] Implement layered security controls</li> <li>[ ] Design incident response and monitoring systems</li> </ul>","tags":["hardening","threat-modeling","defense-in-depth","incident-response"]},{"location":"06-cyber-security/sec-04-advanced/#prerequisites","title":"Prerequisites","text":"<ul> <li>Completion of sec-03-project-harden-app</li> <li>Strong understanding of security fundamentals</li> <li>Experience with security tools and practices</li> </ul>","tags":["hardening","threat-modeling","defense-in-depth","incident-response"]},{"location":"06-cyber-security/sec-04-advanced/#module-structure","title":"Module Structure","text":"","tags":["hardening","threat-modeling","defense-in-depth","incident-response"]},{"location":"06-cyber-security/sec-04-advanced/#part-1-security-hardening-playbooks","title":"Part 1: Security Hardening Playbooks","text":"<p>TODO: Systematic hardening procedures for different environments and technologies</p>","tags":["hardening","threat-modeling","defense-in-depth","incident-response"]},{"location":"06-cyber-security/sec-04-advanced/#part-2-threat-modeling-methodologies","title":"Part 2: Threat Modeling Methodologies","text":"<p>TODO: STRIDE, attack trees, and risk assessment frameworks</p>","tags":["hardening","threat-modeling","defense-in-depth","incident-response"]},{"location":"06-cyber-security/sec-04-advanced/#part-3-defense-in-depth-implementation","title":"Part 3: Defense-in-Depth Implementation","text":"<p>TODO: Multiple security layers, controls, and monitoring integration</p>","tags":["hardening","threat-modeling","defense-in-depth","incident-response"]},{"location":"06-cyber-security/sec-04-advanced/#part-4-incident-response-monitoring","title":"Part 4: Incident Response &amp; Monitoring","text":"<p>TODO: Detection, response procedures, and forensic considerations</p>","tags":["hardening","threat-modeling","defense-in-depth","incident-response"]},{"location":"06-cyber-security/sec-04-advanced/#final-project","title":"Final Project","text":"<p>Create a comprehensive security framework that: - Includes detailed hardening playbooks - Demonstrates systematic threat modeling - Implements multiple security controls - Provides incident response procedures</p>","tags":["hardening","threat-modeling","defense-in-depth","incident-response"]},{"location":"06-cyber-security/sec-04-advanced/#assessment-criteria","title":"Assessment Criteria","text":"<ul> <li>Thorough and practical hardening procedures</li> <li>Systematic threat modeling approach</li> <li>Effective layered security implementation</li> <li>Realistic incident response planning</li> </ul>","tags":["hardening","threat-modeling","defense-in-depth","incident-response"]},{"location":"06-cyber-security/sec-04-advanced/#resources-references","title":"Resources &amp; References","text":"<p>TODO: Add links to security frameworks, threat modeling tools, and incident response guides</p> <p>This module focuses on building comprehensive security programs for organizations and systems.</p>","tags":["hardening","threat-modeling","defense-in-depth","incident-response"]},{"location":"06-cyber-security/challenges/","title":"Cyber Security Level-3 Challenges","text":"<p>These stretch challenges extend the sec-03-project-harden-app milestone with advanced security concepts and real-world scenarios.</p>"},{"location":"06-cyber-security/challenges/#challenge-1-advanced-threat-detection","title":"Challenge 1: Advanced Threat Detection","text":"<p>Implement sophisticated detection mechanisms:</p> <ul> <li>SIEM integration and log analysis</li> <li>Behavioral anomaly detection</li> <li>Machine learning for threat classification</li> <li>Threat intelligence integration</li> </ul> <p>Skills developed: SIEM tools, anomaly detection, threat intelligence</p>"},{"location":"06-cyber-security/challenges/#challenge-2-zero-trust-architecture","title":"Challenge 2: Zero Trust Architecture","text":"<p>Design and implement zero trust principles:</p> <ul> <li>Identity and access management (IAM)</li> <li>Micro-segmentation strategies</li> <li>Continuous authentication and authorization</li> <li>Device compliance and attestation</li> </ul> <p>Skills developed: Zero trust principles, IAM, network security</p>"},{"location":"06-cyber-security/challenges/#challenge-3-incident-response-automation","title":"Challenge 3: Incident Response Automation","text":"<p>Build automated response capabilities:</p> <ul> <li>Security orchestration and automated response (SOAR)</li> <li>Playbook automation for common incidents</li> <li>Threat hunting automation</li> <li>Integration with security tools and APIs</li> </ul> <p>Skills developed: Security automation, incident response, tool integration</p>"},{"location":"06-cyber-security/challenges/#challenge-4-advanced-penetration-testing","title":"Challenge 4: Advanced Penetration Testing","text":"<p>Develop comprehensive testing methodology:</p> <ul> <li>Automated vulnerability scanning integration</li> <li>Custom exploit development (ethical, controlled)</li> <li>Social engineering assessment frameworks</li> <li>Red team exercise planning and execution</li> </ul> <p>Skills developed: Penetration testing, vulnerability assessment, red teaming</p>"},{"location":"06-cyber-security/challenges/#challenge-5-compliance-risk-management","title":"Challenge 5: Compliance &amp; Risk Management","text":"<p>Implement comprehensive compliance framework:</p> <ul> <li>GDPR, HIPAA, or SOC2 compliance implementation</li> <li>Risk assessment and management procedures</li> <li>Security metrics and KPI tracking</li> <li>Third-party security assessment processes</li> </ul> <p>Skills developed: Compliance frameworks, risk management, security governance</p>"},{"location":"06-cyber-security/challenges/#getting-started","title":"Getting Started","text":"<ol> <li>Select challenges aligned with your security career path</li> <li>Extend your sec-03 hardening project</li> <li>Always operate within legal and ethical boundaries</li> <li>Document security controls and their effectiveness</li> </ol>"},{"location":"06-cyber-security/challenges/#important-notice","title":"Important Notice","text":"<p>All security challenges must be performed in controlled, legal environments:</p> <ul> <li>Use dedicated lab environments only</li> <li>Never test on systems you don't own</li> <li>Follow responsible disclosure practices</li> <li>Comply with local laws and regulations</li> </ul>"},{"location":"06-cyber-security/challenges/#resources","title":"Resources","text":"<ul> <li>OWASP Testing Guide</li> <li>NIST Cybersecurity Framework</li> <li>SANS Security Resources</li> <li>MITRE ATT&amp;CK Framework</li> </ul>"},{"location":"_meta/rubrics/level_rubric/","title":"Level Rubric (0\u20134)","text":"<p>Use this rubric to set expectations for each module's depth and outcomes.</p>"},{"location":"_meta/rubrics/level_rubric/#level-0-zero-orientation-setup","title":"Level 0 \u2014 Zero (Orientation &amp; Setup)","text":"<p>Purpose: Get from nothing to a working environment and basic mental models. Evidence: Screenshots, CLI output, short reflection, or repo with trivial code.</p> <p>Checklist - [ ] Environment installed and verified - [ ] Key terms defined in learner's own words - [ ] First \"hello world\" or equivalent - [ ] Short reflection: what I learned / where I got stuck</p>"},{"location":"_meta/rubrics/level_rubric/#level-1-foundations-syntax-basics","title":"Level 1 \u2014 Foundations (Syntax &amp; Basics)","text":"<p>Purpose: Core vocabulary of the domain. Evidence: Small exercises that touch most primitives.</p> <p>Checklist - [ ] At least 3 concrete outcomes demonstrated - [ ] Exercises cover input/output, basic control flow or equivalents - [ ] Simple error handling or debugging step - [ ] Assessment includes a deliverable link (repo/gist)</p>"},{"location":"_meta/rubrics/level_rubric/#level-2-core-skills-real-world-tasks","title":"Level 2 \u2014 Core Skills (Real-World Tasks)","text":"<p>Purpose: Combine fundamentals into practical workflows. Evidence: Mini-projects or tasks mirroring real usage.</p> <p>Checklist - [ ] Uses tooling, testing, or validation - [ ] Performs I/O, persistence, or network call (domain-appropriate) - [ ] Includes README with run/test instructions - [ ] Assessment has a rubric reference</p>"},{"location":"_meta/rubrics/level_rubric/#level-3-projects-portfolio","title":"Level 3 \u2014 Projects (Portfolio)","text":"<p>Purpose: Build something end-to-end with scope, constraints, and review. Evidence: Public repo with docs, tests (where relevant), and demo.</p> <p>Checklist - [ ] Clear acceptance criteria - [ ] CI or basic automation - [ ] Tradeoff discussion in README - [ ] Demo artifact (link, GIF, screenshots)</p>"},{"location":"_meta/rubrics/level_rubric/#level-4-advanced-depthspecialization","title":"Level 4 \u2014 Advanced (Depth/Specialization)","text":"<p>Purpose: Performance, scale, security, architecture, or advanced patterns. Evidence: Benchmarks, profiles, security posture, or architecture write-up.</p> <p>Checklist - [ ] Measurable improvement or depth (e.g., perf/security) - [ ] Reproducible experiments or load tests (domain-appropriate) - [ ] Documented methodology and results - [ ] Reflection on limitations and next steps</p>"},{"location":"_meta/rubrics/project_rubric/","title":"Project Rubric (Milestone Modules)","text":"<p>Use this for Level-3 \"Milestone Projects\". Score 0\u20133 each; total /24.</p> Criterion 0 \u2013 Not Met 1 \u2013 Partial 2 \u2013 Meets 3 \u2013 Exceeds Scope &amp; Requirements Missing major requirements Some requirements unclear or missing All requirements implemented Adds well-documented, sensible extras Correctness Frequent errors; fails basic cases Works for common paths, edge cases fail Passes defined scenarios &amp; edge cases Includes additional tests/specs; robust to unexpected input Code Quality Disorganized; unclear structure Some structure; inconsistent style Clear modules, consistent style, comments Exceptional readability; thoughtful abstractions Testing/Validation None Minimal checks Unit/integration tests or validation present High coverage; CI runs tests automatically Documentation Missing or minimal Basic README with run steps Clear README (setup, run, test, decisions) Architecture diagram, tradeoffs, future work DevEx/Automation Hard to run; manual steps Some scripts Scripts or Makefile; CI lint/checks Full CI, pre-commit hooks, reproducible env <p>Passing Guidance - Pass: \u2265 12/24 and no zeros on Correctness or Scope. - Merit: \u2265 18/24. - Distinction: \u2265 22/24 and at least two 3's.</p>"},{"location":"_meta/rubrics/project_rubric/#submission-template","title":"Submission Template","text":"<ul> <li>Repo URL:</li> <li>Short demo (link/GIF):</li> <li>What works / what doesn't:</li> <li>Time spent &amp; main challenges:</li> <li>Next steps (if continuing):</li> </ul>"},{"location":"_meta/rubrics/project_rubric/#review-notes","title":"Review Notes","text":"<ul> <li>Reviewers leave line comments + a summary referencing this rubric.</li> <li>If requested changes are minor, allow resubmission without full re-review.</li> </ul>"},{"location":"policies/solutions/","title":"Reference Solutions Policy","text":"<p>This document outlines our approach to providing reference solutions while maintaining the learning experience integrity.</p>"},{"location":"policies/solutions/#philosophy","title":"Philosophy","text":"<p>We believe that learning comes from struggling with problems, not from copying solutions. Our policy balances providing guidance with preserving the educational value of each challenge.</p>"},{"location":"policies/solutions/#reference-solution-availability","title":"Reference Solution Availability","text":""},{"location":"policies/solutions/#public-materials","title":"Public Materials","text":"<ul> <li>Conceptual guides: Architecture patterns, best practices, and design principles</li> <li>Code snippets: Small, focused examples demonstrating specific techniques</li> <li>Debugging help: Common error patterns and troubleshooting guides</li> <li>Tool guides: How to use specific technologies and frameworks</li> </ul>"},{"location":"policies/solutions/#private-repository-solutions","title":"Private Repository Solutions","text":"<p>Complete reference implementations are maintained in a private repository accessible only to:</p> <ul> <li>Course maintainers and contributors</li> <li>Mentors and teaching assistants</li> <li>Learners who have completed the module (upon request)</li> </ul>"},{"location":"policies/solutions/#accessing-reference-solutions","title":"Accessing Reference Solutions","text":""},{"location":"policies/solutions/#for-learners","title":"For Learners","text":"<ol> <li>Complete the module first: Submit your own solution before requesting references</li> <li>Request access: Open an issue with the \"Reference Request\" template</li> <li>Provide your solution: Link to your completed project for review</li> <li>Review and compare: Use references to identify improvement opportunities</li> </ol>"},{"location":"policies/solutions/#for-mentors","title":"For Mentors","text":"<p>Mentors have access to reference solutions to:</p> <ul> <li>Provide consistent code review feedback</li> <li>Identify common learning patterns and gaps</li> <li>Suggest specific improvements without giving away solutions</li> </ul>"},{"location":"policies/solutions/#what-reference-solutions-include","title":"What Reference Solutions Include","text":""},{"location":"policies/solutions/#code-implementation","title":"Code Implementation","text":"<ul> <li>Multiple approaches: Different valid solutions to the same problem</li> <li>Progressive complexity: Basic implementation \u2192 optimized \u2192 production-ready</li> <li>Common variations: Different technology choices and architectural decisions</li> </ul>"},{"location":"policies/solutions/#documentation","title":"Documentation","text":"<ul> <li>Design decisions: Why certain approaches were chosen</li> <li>Trade-offs analysis: Benefits and drawbacks of different solutions</li> <li>Performance considerations: Scalability and optimization insights</li> <li>Testing strategies: Comprehensive test coverage examples</li> </ul>"},{"location":"policies/solutions/#learning-notes","title":"Learning Notes","text":"<ul> <li>Common pitfalls: Mistakes learners typically make</li> <li>Extension ideas: How to build upon the basic implementation</li> <li>Real-world connections: How the project relates to industry practices</li> </ul>"},{"location":"policies/solutions/#guidelines-for-seekers","title":"Guidelines for Seekers","text":""},{"location":"policies/solutions/#before-requesting-access","title":"Before Requesting Access","text":"<ul> <li>[ ] Complete your own implementation</li> <li>[ ] Document your approach and design decisions</li> <li>[ ] Identify specific areas where you want feedback</li> <li>[ ] Run tests and validate your solution works</li> </ul>"},{"location":"policies/solutions/#using-reference-solutions","title":"Using Reference Solutions","text":"<p>Do: - Compare your approach with reference implementations - Understand the reasoning behind different design choices - Identify optimization opportunities in your code - Use references to improve your next project</p> <p>Don't: - Copy reference code without understanding it - Submit reference solutions as your own work - Share reference solutions publicly or with other learners - Use references before attempting the problem yourself</p>"},{"location":"policies/solutions/#contributing-reference-solutions","title":"Contributing Reference Solutions","text":""},{"location":"policies/solutions/#quality-standards","title":"Quality Standards","text":"<p>Reference solutions must demonstrate:</p> <ul> <li>Clean, readable code following language conventions</li> <li>Comprehensive testing with good coverage</li> <li>Clear documentation explaining design decisions</li> <li>Production considerations like error handling and logging</li> </ul>"},{"location":"policies/solutions/#multiple-implementations","title":"Multiple Implementations","text":"<p>We encourage multiple reference solutions showing:</p> <ul> <li>Different architectural approaches</li> <li>Various technology stack choices</li> <li>Progressive skill level implementations</li> <li>Different optimization strategies</li> </ul>"},{"location":"policies/solutions/#review-process","title":"Review Process","text":"<p>All reference solutions undergo:</p> <ol> <li>Technical review for correctness and best practices</li> <li>Educational review for learning value and clarity</li> <li>Documentation review for completeness and usefulness</li> <li>Peer review by other contributors</li> </ol>"},{"location":"policies/solutions/#repository-structure","title":"Repository Structure","text":"<pre><code>reference-solutions/\n\u251c\u2500\u2500 01-web-development/\n\u2502   \u251c\u2500\u2500 web-03-spa-api/\n\u2502   \u2502   \u251c\u2500\u2500 basic-implementation/\n\u2502   \u2502   \u251c\u2500\u2500 optimized-version/\n\u2502   \u2502   \u2514\u2500\u2500 production-ready/\n\u2502   \u2514\u2500\u2500 challenges/\n\u251c\u2500\u2500 02-python/\n\u2502   \u2514\u2500\u2500 ...\n\u2514\u2500\u2500 shared/\n    \u251c\u2500\u2500 patterns/\n    \u2514\u2500\u2500 tools/\n</code></pre>"},{"location":"policies/solutions/#maintaining-learning-value","title":"Maintaining Learning Value","text":"<p>This policy ensures that:</p> <ul> <li>Struggle is preserved: Learners must attempt problems independently</li> <li>Growth is supported: References help learners improve and learn</li> <li>Integrity is maintained: Solutions can't be copied without learning</li> <li>Quality is assured: References demonstrate best practices</li> </ul>"},{"location":"policies/solutions/#questions-and-clarifications","title":"Questions and Clarifications","text":"<p>For questions about this policy, please:</p> <ul> <li>Open an issue with the \"Policy Question\" template</li> <li>Tag relevant maintainers for clarification</li> <li>Participate in community discussions about learning approaches</li> </ul> <p>This policy balances providing support with preserving the educational journey that makes learning valuable.</p>"},{"location":"progress/","title":"\ud83d\udcca Progress Dashboard","text":"<p>Track learner progress across all Zero-to-Pro tracks.</p> <p>Last updated: 2025-01-01</p> <p>Active learners: 0</p>"},{"location":"progress/#quick-stats","title":"\ud83d\udcc8 Quick Stats","text":"<ul> <li>Total levels completed: 0</li> <li>Average levels per learner: 0</li> <li>Most completed: 0 levels</li> </ul>"},{"location":"progress/#leaderboard","title":"\ud83c\udfc6 Leaderboard","text":"Rank Learner Progress L0 L1 L2 L3 L4 Modules Last Updated"},{"location":"progress/#detailed-progress","title":"\ud83d\udccb Detailed Progress","text":"<p>No active progress trackers yet. Create yours!</p> <p>Want to track your progress? Create a Progress Tracker issue</p>"},{"location":"tracks/","title":"Learning Tracks","text":"<p>Choose your learning path based on your goals and interests. Each track takes you from zero to production-ready skills.</p>   -   **Git Fundamentals**      ---      6 modules \u2022 3 levels      Build production-ready git fundamentals skills through hands-on projects      [View Track :material-arrow-right:](git-path.md)  -   **Web Development**      ---      5 modules \u2022 5 levels      Build production-ready web development skills through hands-on projects      [View Track :material-arrow-right:](web-development.md)  -   **Python**      ---      5 modules \u2022 5 levels      Build production-ready python skills through hands-on projects      [View Track :material-arrow-right:](python.md)  -   **Java**      ---      5 modules \u2022 5 levels      Build production-ready java skills through hands-on projects      [View Track :material-arrow-right:](java.md)  -   **Go**      ---      5 modules \u2022 5 levels      Build production-ready go skills through hands-on projects      [View Track :material-arrow-right:](go.md)  -   **AI/ML**      ---      5 modules \u2022 5 levels      Build production-ready ai/ml skills through hands-on projects      [View Track :material-arrow-right:](ai-ml.md)  -   **Cyber Security**      ---      5 modules \u2022 5 levels      Build production-ready cyber security skills through hands-on projects      [View Track :material-arrow-right:](cyber-security.md)"},{"location":"tracks/#how-tracks-work","title":"How Tracks Work","text":"<p>Each track follows a proven learning progression:</p> <ul> <li>Level 0: Orientation and setup</li> <li>Level 1: Foundation concepts</li> <li>Level 2: Core practical skills</li> <li>Level 3: Real-world project milestone</li> <li>Level 4: Advanced production techniques</li> </ul>"},{"location":"tracks/ai-ml/","title":"AI/ML","text":"<p>Learn ai/ml from zero to production-ready skills through structured, hands-on modules.</p>   -   **Orientation**      ---      ### From Zero: Math Survival Kit + Python for Data      Getting started and setup      **Level 0**      [Start Module :material-arrow-right:](https://github.com/AyhamJo7/Zero-2-Pro/blob/main/05-ai-ml/ai-00-math-python.md)  -   **Foundations**      ---      ### Foundations: ML Workflow + Classical Models      Core concepts and basics      **Level 1**      [Start Module :material-arrow-right:](https://github.com/AyhamJo7/Zero-2-Pro/blob/main/05-ai-ml/ai-01-classical-ml.md)  -   **Core Skills**      ---      ### Core Skills: Training Loops, Regularization, Embeddings      Practical application      **Level 2**      [Start Module :material-arrow-right:](https://github.com/AyhamJo7/Zero-2-Pro/blob/main/05-ai-ml/ai-02-deeplearning-basics.md)  -   **Project**      ---      ### Milestone: Simple ML App or RAG Demo with Evaluation      Real-world milestone      **Level 3**      [Start Module :material-arrow-right:](https://github.com/AyhamJo7/Zero-2-Pro/blob/main/05-ai-ml/ai-03-project-mlapp.md)  -   **Advanced**      ---      ### Advanced: RAG Evaluation, Guardrails, and Observability      Production-ready expertise      **Level 4**      [Start Module :material-arrow-right:](https://github.com/AyhamJo7/Zero-2-Pro/blob/main/05-ai-ml/ai-04-advanced.md)"},{"location":"tracks/ai-ml/#track-details","title":"Track Details","text":"Metric Value Modules 5 Levels 5 Format Self-paced with milestones Prerequisites Varies by level"},{"location":"tracks/cyber-security/","title":"Cyber Security","text":"<p>Learn cyber security from zero to production-ready skills through structured, hands-on modules.</p>   -   **Orientation**      ---      ### From Zero: Security Mindset, Networking, and Linux Basics      Getting started and setup      **Level 0**      [Start Module :material-arrow-right:](https://github.com/AyhamJo7/Zero-2-Pro/blob/main/06-cyber-security/sec-00-basics.md)  -   **Foundations**      ---      ### Foundations: OWASP Top 10 Overview + Secure Auth Basics      Core concepts and basics      **Level 1**      [Start Module :material-arrow-right:](https://github.com/AyhamJo7/Zero-2-Pro/blob/main/06-cyber-security/sec-01-web-owasp.md)  -   **Core Skills**      ---      ### Core Skills: Hardening, Patching, Secrets, Logging      Practical application      **Level 2**      [Start Module :material-arrow-right:](https://github.com/AyhamJo7/Zero-2-Pro/blob/main/06-cyber-security/sec-02-blue-team.md)  -   **Project**      ---      ### Milestone: Harden a Small Web App (Legal Lab Only)      Real-world milestone      **Level 3**      [Start Module :material-arrow-right:](https://github.com/AyhamJo7/Zero-2-Pro/blob/main/06-cyber-security/sec-03-project-harden-app.md)  -   **Advanced**      ---      ### Advanced: Hardening Playbook &amp; Threat Modeling      Production-ready expertise      **Level 4**      [Start Module :material-arrow-right:](https://github.com/AyhamJo7/Zero-2-Pro/blob/main/06-cyber-security/sec-04-advanced.md)"},{"location":"tracks/cyber-security/#track-details","title":"Track Details","text":"Metric Value Modules 5 Levels 5 Format Self-paced with milestones Prerequisites Varies by level"},{"location":"tracks/git-path/","title":"Git Fundamentals","text":"<p>Learn git fundamentals from zero to production-ready skills through structured, hands-on modules.</p>   -   **Orientation**      ---      ### Git from Absolute Zero: Concepts &amp; Setup      Getting started and setup      **Level 0**      [Start Module :material-arrow-right:](https://github.com/AyhamJo7/Zero-2-Pro/blob/main/00-git-path/git-01-intro.md)  -   **Foundations**      ---      ### Local Basics: init, status, add, commit, log      Core concepts and basics      **Level 1**      [Start Module :material-arrow-right:](https://github.com/AyhamJo7/Zero-2-Pro/blob/main/00-git-path/git-02-first-commit.md)  -   **Foundations**      ---      ### Branches &amp; Merges: Fast-forward, Three-way      Core concepts and basics      **Level 1**      [Start Module :material-arrow-right:](https://github.com/AyhamJo7/Zero-2-Pro/blob/main/00-git-path/git-03-branches-merges.md)  -   **Core Skills**      ---      ### Remotes &amp; GitHub: clone, fetch, pull, push, PR      Practical application      **Level 2**      [Start Module :material-arrow-right:](https://github.com/AyhamJo7/Zero-2-Pro/blob/main/00-git-path/git-04-remotes-github.md)  -   **Core Skills**      ---      ### Rebase Safely: interactive rebase, fixups, autosquash      Practical application      **Level 2**      [Start Module :material-arrow-right:](https://github.com/AyhamJo7/Zero-2-Pro/blob/main/00-git-path/git-05-rebase-conflicts.md)  -   **Core Skills**      ---      ### Time Travel: log formats, blame, bisect, tags      Practical application      **Level 2**      [Start Module :material-arrow-right:](https://github.com/AyhamJo7/Zero-2-Pro/blob/main/00-git-path/git-06-history-tools.md)"},{"location":"tracks/git-path/#track-details","title":"Track Details","text":"Metric Value Modules 6 Levels 3 Format Self-paced with milestones Prerequisites Varies by level"},{"location":"tracks/go/","title":"Go","text":"<p>Learn go from zero to production-ready skills through structured, hands-on modules.</p>   -   **Orientation**      ---      ### From Zero: Install Go, Modules, and First Program      Getting started and setup      **Level 0**      [Start Module :material-arrow-right:](https://github.com/AyhamJo7/Zero-2-Pro/blob/main/04-go/go-00-setup.md)  -   **Foundations**      ---      ### Foundations: Types, Errors, Testing, Packages      Core concepts and basics      **Level 1**      [Start Module :material-arrow-right:](https://github.com/AyhamJo7/Zero-2-Pro/blob/main/04-go/go-01-foundations.md)  -   **Core Skills**      ---      ### Core Skills: HTTP Services + Goroutines &amp; Channels      Practical application      **Level 2**      [Start Module :material-arrow-right:](https://github.com/AyhamJo7/Zero-2-Pro/blob/main/04-go/go-02-core-concurrency.md)  -   **Project**      ---      ### Milestone: Production-ish Go Service      Real-world milestone      **Level 3**      [Start Module :material-arrow-right:](https://github.com/AyhamJo7/Zero-2-Pro/blob/main/04-go/go-03-project-service.md)  -   **Advanced**      ---      ### Advanced: Concurrency Patterns, Context, and Backpressure      Production-ready expertise      **Level 4**      [Start Module :material-arrow-right:](https://github.com/AyhamJo7/Zero-2-Pro/blob/main/04-go/go-04-advanced.md)"},{"location":"tracks/go/#track-details","title":"Track Details","text":"Metric Value Modules 5 Levels 5 Format Self-paced with milestones Prerequisites Varies by level"},{"location":"tracks/java/","title":"Java","text":"<p>Learn java from zero to production-ready skills through structured, hands-on modules.</p>   -   **Orientation**      ---      ### From Zero: JDK Install, javac/java, and First Program      Getting started and setup      **Level 0**      [Start Module :material-arrow-right:](https://github.com/AyhamJo7/Zero-2-Pro/blob/main/03-java/java-00-setup.md)  -   **Foundations**      ---      ### Foundations: OOP, Collections, Exceptions, I/O      Core concepts and basics      **Level 1**      [Start Module :material-arrow-right:](https://github.com/AyhamJo7/Zero-2-Pro/blob/main/03-java/java-01-foundations.md)  -   **Core Skills**      ---      ### Core Skills: Build a Minimal REST API + Tests      Practical application      **Level 2**      [Start Module :material-arrow-right:](https://github.com/AyhamJo7/Zero-2-Pro/blob/main/03-java/java-02-core-rest.md)  -   **Project**      ---      ### Milestone: Production-ish Service (Logging, Health, Dockerfile)      Real-world milestone      **Level 3**      [Start Module :material-arrow-right:](https://github.com/AyhamJo7/Zero-2-Pro/blob/main/03-java/java-03-project-service.md)  -   **Advanced**      ---      ### Advanced: Resilient Services &amp; Observability      Production-ready expertise      **Level 4**      [Start Module :material-arrow-right:](https://github.com/AyhamJo7/Zero-2-Pro/blob/main/03-java/java-04-advanced.md)"},{"location":"tracks/java/#track-details","title":"Track Details","text":"Metric Value Modules 5 Levels 5 Format Self-paced with milestones Prerequisites Varies by level"},{"location":"tracks/python/","title":"Python","text":"<p>Learn python from zero to production-ready skills through structured, hands-on modules.</p>   -   **Orientation**      ---      ### From Zero: Install Python, Virtual Envs, and First Script      Getting started and setup      **Level 0**      [Start Module :material-arrow-right:](https://github.com/AyhamJo7/Zero-2-Pro/blob/main/02-python/py-00-setup.md)  -   **Foundations**      ---      ### Foundations: Types, Control Flow, Functions, Modules      Core concepts and basics      **Level 1**      [Start Module :material-arrow-right:](https://github.com/AyhamJo7/Zero-2-Pro/blob/main/02-python/py-01-foundations.md)  -   **Core Skills**      ---      ### Core Skills: Packaging, Testing (pytest), Logging, CLI      Practical application      **Level 2**      [Start Module :material-arrow-right:](https://github.com/AyhamJo7/Zero-2-Pro/blob/main/02-python/py-02-core-tooling.md)  -   **Project**      ---      ### Milestone: CLI Utility with Tests and Release      Real-world milestone      **Level 3**      [Start Module :material-arrow-right:](https://github.com/AyhamJo7/Zero-2-Pro/blob/main/02-python/py-03-project-cli.md)  -   **Advanced**      ---      ### Advanced: Async IO, Concurrency, and Profiling      Production-ready expertise      **Level 4**      [Start Module :material-arrow-right:](https://github.com/AyhamJo7/Zero-2-Pro/blob/main/02-python/py-04-advanced.md)"},{"location":"tracks/python/#track-details","title":"Track Details","text":"Metric Value Modules 5 Levels 5 Format Self-paced with milestones Prerequisites Varies by level"},{"location":"tracks/web-development/","title":"Web Development","text":"<p>Learn web development from zero to production-ready skills through structured, hands-on modules.</p>   -   **Orientation**      ---      ### From Zero: How the Web Works (Client/Server, HTTP, HTML/CSS)      Getting started and setup      **Level 0**      [Start Module :material-arrow-right:](https://github.com/AyhamJo7/Zero-2-Pro/blob/main/01-web-development/web-00-orientation.md)  -   **Foundations**      ---      ### Foundations: Modern JavaScript + DOM Essentials      Core concepts and basics      **Level 1**      [Start Module :material-arrow-right:](https://github.com/AyhamJo7/Zero-2-Pro/blob/main/01-web-development/web-01-foundations-js.md)  -   **Core Skills**      ---      ### Core Skills: API Basics + Persistence + Auth Concepts      Practical application      **Level 2**      [Start Module :material-arrow-right:](https://github.com/AyhamJo7/Zero-2-Pro/blob/main/01-web-development/web-02-core-fullstack.md)  -   **Project**      ---      ### Milestone: SPA + API with Auth and Tests      Real-world milestone      **Level 3**      [Start Module :material-arrow-right:](https://github.com/AyhamJo7/Zero-2-Pro/blob/main/01-web-development/web-03-project-spa-api.md)  -   **Advanced**      ---      ### Advanced: Web Performance &amp; Observability      Production-ready expertise      **Level 4**      [Start Module :material-arrow-right:](https://github.com/AyhamJo7/Zero-2-Pro/blob/main/01-web-development/web-04-advanced.md)"},{"location":"tracks/web-development/#track-details","title":"Track Details","text":"Metric Value Modules 5 Levels 5 Format Self-paced with milestones Prerequisites Varies by level"}]}